{"mappings":"YAaO,SAASA,EAAgBC,GAC5B,OAAOC,MAAM,GAAyBC,OAZzB,6CAYY,eAAgCA,OAAnBF,EAAQ,aAAmBE,OAdrD,0EAePC,MAAK,SAACC,GACH,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAMF,EAAIG,YAExB,OAAOH,EAAII,M,IAiDPP,MAAM,uCACjBE,MAAK,SAACC,GAEH,GADJK,QAAQC,IAAIN,IACHA,EAAIC,GACL,MAAM,IAAIC,MAAM,+CAM6C,OAA1DF,EAAII,M,IAEdL,MAAK,SAACC,G,OAAMK,QAAQC,IAAIN,E,IACxBO,OAAM,SAAAC,G,OAAKH,QAAQI,MAAMD,E,IAbO,ICnE/BE,EAAO,CACTC,SAAUC,SAASC,cAAc,iBACjCC,QAASF,SAASC,cAAc,aAChCE,OAAQH,SAASC,cAAc,WAC/BJ,MAAOG,SAASC,cAAc,WAElCH,EAAKD,MAAMO,UAAUC,IAAI,UACzBP,EAAKC,SAASK,UAAUC,IAAI,UAC5BP,EAAKK,OAAOC,UAAUE,OAAO,UAC7BR,EAAKI,QAAQE,UAAUC,IAAI,UDLhBpB,MAAM,GAAeC,OAJZ,wCAIeC,MAAK,SAACC,GACjC,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAMF,EAAIG,YAExB,OAAOH,EAAII,M,ICELL,MAAK,SAACoB,GAChBd,QAAQC,IAAIa,GACZT,EAAKK,OAAOC,UAAUC,IAAI,UAC1BP,EAAKC,SAASK,UAAUE,OAAO,UAC/BC,EAAOC,SAAQ,SAAAC,GACX,IAAMC,EAASV,SAASW,cAAc,UACtCD,EAAOE,YAAcH,EAAMI,KAC3BH,EAAOI,MAAQL,EAAMM,GACrBjB,EAAKC,SAASiB,YAAYN,E,IAE9BZ,EAAKC,SAASK,UAAUE,OAAO,UAC/BR,EAAKK,OAAOC,UAAUC,IAAI,S,IAC3BV,OAAM,SAAAC,GACLH,QAAQI,MAAMD,GACdE,EAAKK,OAAOC,UAAUC,IAAI,UAC1BP,EAAKD,MAAMO,UAAUE,OAAO,S,IAIhCR,EAAKC,SAASkB,iBAAiB,UAAU,WACrC,IAAMjC,EAAUc,EAAKC,SAASe,MAE9BhB,EAAKC,SAASK,UAAUC,IAAI,UAC5BP,EAAKI,QAAQE,UAAUC,IAAI,UAC3BP,EAAKK,OAAOC,UAAUE,OAAO,UAE7BvB,EAAgBC,GAASG,MAAK,SAAA+B,GAE1B,IAAMC,EAAUD,EAAK,GACfE,EAAYD,EAAQZ,OAAO,GAC3Bc,EAAS,iBAEHnC,OADNkC,EAAUP,KAAK,6BACY3B,OAArBiC,EAAQG,IAAI,WACPpC,OADgBkC,EAAUP,KAAK,+BAE/B3B,OADAkC,EAAUG,YAAY,iCACArC,OAAtBkC,EAAUI,YAAY,kBAEvC1B,EAAKI,QAAQuB,UAAYJ,EAErBvB,EAAKK,OAAOC,UAAUC,IAAI,UAC1BP,EAAKC,SAASK,UAAUE,OAAO,UAC/BR,EAAKI,QAAQE,UAAUE,OAAO,S,IAEjCX,OAAM,SAAAC,GACHH,QAAQI,MAAMD,GACdE,EAAKD,MAAMO,UAAUE,OAAO,UAC5BR,EAAKK,OAAOC,UAAUC,IAAI,S","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const API_KEY = \"live_7gmkYXXbt2NTLSO5ORqlwCtiezgaWS1vWMGBaD9WSm1I3zOd5BVIwWlWk3wYT2zi\";\nconst BREEDS_LIST = \"https://api.thecatapi.com/v1/breeds\";//тут повертає масив з усіма об'єктами-порід..\nconst CAT_DATA = \"https://api.thecatapi.com/v1/images/search\";//додай ще через ? breed_ids, напр. beng, а потім через & апі-кей..\n\nexport function fetchBreeds() {\n    return fetch(`${BREEDS_LIST}`).then((res) => {\n        if (!res.ok) {\n            throw new Error(res.statusText)\n        }\n        return res.json();\n    });\n    \n}\nexport function fetchCatByBreed(breedId) {\n    return fetch(`${CAT_DATA}?breed_ids=${breedId}&api_key=${API_KEY}`)\n        .then((res) => {\n            if (!res.ok) {\n                throw new Error(res.statusText)\n            }\n            return res.json();\n        });\n}\n\n\n\n//  {\n//         \"weight\": {\n//             \"imperial\": \"7  -  10\",\n//             \"metric\": \"3 - 5\"\n//         },\n//         \"id\": \"abys\",\n//         \"name\": \"Abyssinian\",\n//         \"cfa_url\": \"http://cfa.org/Breeds/BreedsAB/Abyssinian.aspx\",\n//         \"vetstreet_url\": \"http://www.vetstreet.com/cats/abyssinian\",\n//         \"vcahospitals_url\": \"https://vcahospitals.com/know-your-pet/cat-breeds/abyssinian\",\n//         \"temperament\": \"Active, Energetic, Independent, Intelligent, Gentle\",\n//         \"origin\": \"Egypt\",\n//         \"country_codes\": \"EG\",\n//         \"country_code\": \"EG\",\n//         \"description\": \"The Abyssinian is easy to care for, and a joy to have in your home. They’re affectionate cats and love both people and other animals.\",\n//         \"life_span\": \"14 - 15\",\n//         \"indoor\": 0,\n//         \"lap\": 1,\n//         \"alt_names\": \"\",\n//         \"adaptability\": 5,\n//         \"affection_level\": 5,\n//         \"child_friendly\": 3,\n//         \"dog_friendly\": 4,\n//         \"energy_level\": 5,\n//         \"grooming\": 1,\n//         \"health_issues\": 2,\n//         \"intelligence\": 5,\n//         \"shedding_level\": 2,\n//         \"social_needs\": 5,\n//         \"stranger_friendly\": 5,\n//         \"vocalisation\": 1,\n//         \"experimental\": 0,\n//         \"hairless\": 0,\n//         \"natural\": 1,\n//         \"rare\": 0,\n//         \"rex\": 0,\n//         \"suppressed_tail\": 0,\n//         \"short_legs\": 0,\n//         \"wikipedia_url\": \"https://en.wikipedia.org/wiki/Abyssinian_(cat)\",\n//         \"hypoallergenic\": 0,\n//         \"reference_image_id\": \"0XYvRd7oD\"\n//     } один з об'єктів, з переліку усіх об'єктів-порід\n\nconst promise = fetch(\"https://api.thecatapi.com/v1/breeds\")\n    .then((res) => {\n    console.log(res);\n        if (!res.ok) {\n            throw new Error(\"Помилка, яку ми примусово закидуємо у catch\");//тут ми створили екземпляр класу Помилка,\n        // щоб вона зловилась у операторі catch. Навіщо!! а для того, що буває відповідь від сервера є, але вона\n        // для нас, щоб обробляти її у програмі надалі, не годиться! ну, немає в цій відповіді даних, але сервер відповів і помилка не ловиться!\n        //І коли статус перевіриться і там буде status=false то викидання моєї самописної помилки автоматично переводить стан промісу у regected(відхилено)\n        // А коли стан реджектід, то керування одразу переходить до catch! Тоді вже Кетч його ловить і виводить до консолі!\n        }\n        return res.json()\n    })\n    .then((res)=>console.log(res))\n    .catch(err=>console.error(err))//тут зловиться наша самописна помилка..\n//console.log(promise); виведе promise(pending), тому що двіжок не може його вивести у синхронний код.. джава скрипт синронна мова, а проміс\n//  - це асинхронщина!\n//якщо подивитись у консоль після виводу res, то там буде об'єкт у властивості body якого зберігаються данні по запиту, але ми їх не зможемо\n// продивитись бо це специфічний об'єкт саме класу \"Promise\", і його зазначено у полі Prototype.. І саме у полі прототайп є доступний метод, який\n// треба застосувати, щоб перевести формат json у джава скриптовий об'єкт для подальшого опрацювання..\n//ЦІКАВО! тут важливо усвідомити, що ми отримуємо від сервера об'єкт типу Response! це НЕ об'єкт типу джейсон - це об'єкт типу Response і його\n// не можна засовувати у методі JSON.parse, бо буде помилка!\n// тут дуже важливо самке використовувати наданий метод json(), що зазначено у прототипі! Бо саме він, цей метод дістає об'єкт-відповідь класу\n// Response спочатку з поля body, а тоді розпарсює його до належного вигляду!\n//Цікаво, що в одному then ти робиш json(), а в другому виводиш у консоль.. в одному не виходить..\n","import { fetchBreeds, fetchCatByBreed } from \"./cat-api.js\";\nconst refs = {\n    selectEl: document.querySelector(\".breed-select\"),\n    divInfo: document.querySelector(\".cat-info\"),\n    loader: document.querySelector(\".loader\"),\n    error: document.querySelector(\".error\")\n}\nrefs.error.classList.add(\"hidden\");\nrefs.selectEl.classList.add(\"hidden\");\nrefs.loader.classList.remove(\"hidden\");\nrefs.divInfo.classList.add(\"hidden\");\nfetchBreeds().then((breeds) => {\n    console.log(breeds);\n    refs.loader.classList.add(\"hidden\");    \n    refs.selectEl.classList.remove(\"hidden\");\n    breeds.forEach(breed => {\n        const option = document.createElement(\"option\");\n        option.textContent = breed.name;\n        option.value = breed.id;\n        refs.selectEl.appendChild(option);\n    });\n    refs.selectEl.classList.remove(\"hidden\");\n    refs.loader.classList.add(\"hidden\");\n}).catch(err => {\n    console.error(err);\n    refs.loader.classList.add(\"hidden\");\n    refs.error.classList.remove(\"hidden\");\n});\n\n\nrefs.selectEl.addEventListener(\"change\", () => {\n    const breedId = refs.selectEl.value;\n\n    refs.selectEl.classList.add(\"hidden\");\n    refs.divInfo.classList.add(\"hidden\");\n    refs.loader.classList.remove(\"hidden\");\n\n    fetchCatByBreed(breedId).then(data => {\n        \n        const catData = data[0];\n        const breedData = catData.breeds[0];\n        const markup = `\n        <h2>${breedData.name}</h2>\n        <img src=\"${catData.url}\" alt=\"${breedData.name}\">\n        <p>Temperament ${breedData.temperament}</p>\n        <p>Description ${breedData.description}</p>\n        `;\n        refs.divInfo.innerHTML = markup;\n\n            refs.loader.classList.add(\"hidden\");\n            refs.selectEl.classList.remove(\"hidden\");\n            refs.divInfo.classList.remove(\"hidden\");\n    })\n        .catch(err => {\n            console.error(err);\n            refs.error.classList.remove(\"hidden\");\n            refs.loader.classList.add(\"hidden\");\n    })\n});\n\n\n"],"names":["$ae0c329fb0fb36dc$export$57b7d3a597416aa2","breedId","fetch","concat","then","res","ok","Error","statusText","json","console","log","catch","err","error","$b8f9b7833fa37166$var$refs","selectEl","document","querySelector","divInfo","loader","classList","add","remove","breeds","forEach","breed","option","createElement","textContent","name","value","id","appendChild","addEventListener","data","catData","breedData","markup","url","temperament","description","innerHTML"],"version":3,"file":"index.b38409fb.js.map"}